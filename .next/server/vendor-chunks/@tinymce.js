"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@tinymce";
exports.ids = ["vendor-chunks/@tinymce"];
exports.modules = {

/***/ "(ssr)/./node_modules/@tinymce/tinymce-react/lib/es2015/main/ts/ScriptLoader2.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tinymce/tinymce-react/lib/es2015/main/ts/ScriptLoader2.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ScriptLoader: () => (/* binding */ ScriptLoader)\n/* harmony export */ });\n/* harmony import */ var _Utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Utils */ \"(ssr)/./node_modules/@tinymce/tinymce-react/lib/es2015/main/ts/Utils.js\");\nvar __assign = undefined && undefined.__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n\nvar injectScriptTag = function(doc, item, handler) {\n    var _a, _b;\n    var scriptTag = doc.createElement(\"script\");\n    scriptTag.referrerPolicy = \"origin\";\n    scriptTag.type = \"application/javascript\";\n    scriptTag.id = item.id;\n    scriptTag.src = item.src;\n    scriptTag.async = (_a = item.async) !== null && _a !== void 0 ? _a : false;\n    scriptTag.defer = (_b = item.defer) !== null && _b !== void 0 ? _b : false;\n    var loadHandler = function() {\n        scriptTag.removeEventListener(\"load\", loadHandler);\n        scriptTag.removeEventListener(\"error\", errorHandler);\n        handler(item.src);\n    };\n    var errorHandler = function(err) {\n        scriptTag.removeEventListener(\"load\", loadHandler);\n        scriptTag.removeEventListener(\"error\", errorHandler);\n        handler(item.src, err);\n    };\n    scriptTag.addEventListener(\"load\", loadHandler);\n    scriptTag.addEventListener(\"error\", errorHandler);\n    if (doc.head) {\n        doc.head.appendChild(scriptTag);\n    }\n};\nvar createDocumentScriptLoader = function(doc) {\n    var lookup = {};\n    var scriptLoadOrErrorHandler = function(src, err) {\n        var item = lookup[src];\n        item.done = true;\n        item.error = err;\n        for(var _i = 0, _a = item.handlers; _i < _a.length; _i++){\n            var h = _a[_i];\n            h(src, err);\n        }\n        item.handlers = [];\n    };\n    var loadScripts = function(items, success, failure) {\n        // eslint-disable-next-line no-console\n        var failureOrLog = function(err) {\n            return failure !== undefined ? failure(err) : console.error(err);\n        };\n        if (items.length === 0) {\n            failureOrLog(new Error(\"At least one script must be provided\"));\n            return;\n        }\n        var successCount = 0;\n        var failed = false;\n        var loaded = function(_src, err) {\n            if (failed) {\n                return;\n            }\n            if (err) {\n                failed = true;\n                failureOrLog(err);\n            } else if (++successCount === items.length) {\n                success();\n            }\n        };\n        for(var _i = 0, items_1 = items; _i < items_1.length; _i++){\n            var item = items_1[_i];\n            var existing = lookup[item.src];\n            if (existing) {\n                if (existing.done) {\n                    loaded(item.src, existing.error);\n                } else {\n                    existing.handlers.push(loaded);\n                }\n            } else {\n                // create a new entry\n                var id = (0,_Utils__WEBPACK_IMPORTED_MODULE_0__.uuid)(\"tiny-\");\n                lookup[item.src] = {\n                    id: id,\n                    src: item.src,\n                    done: false,\n                    error: null,\n                    handlers: [\n                        loaded\n                    ]\n                };\n                injectScriptTag(doc, __assign({\n                    id: id\n                }, item), scriptLoadOrErrorHandler);\n            }\n        }\n    };\n    var deleteScripts = function() {\n        var _a;\n        for(var _i = 0, _b = Object.values(lookup); _i < _b.length; _i++){\n            var item = _b[_i];\n            var scriptTag = doc.getElementById(item.id);\n            if (scriptTag != null && scriptTag.tagName === \"SCRIPT\") {\n                (_a = scriptTag.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(scriptTag);\n            }\n        }\n        lookup = {};\n    };\n    var getDocument = function() {\n        return doc;\n    };\n    return {\n        loadScripts: loadScripts,\n        deleteScripts: deleteScripts,\n        getDocument: getDocument\n    };\n};\nvar createScriptLoader = function() {\n    var cache = [];\n    var getDocumentScriptLoader = function(doc) {\n        var loader = cache.find(function(l) {\n            return l.getDocument() === doc;\n        });\n        if (loader === undefined) {\n            loader = createDocumentScriptLoader(doc);\n            cache.push(loader);\n        }\n        return loader;\n    };\n    var loadList = function(doc, items, delay, success, failure) {\n        var doLoad = function() {\n            return getDocumentScriptLoader(doc).loadScripts(items, success, failure);\n        };\n        if (delay > 0) {\n            setTimeout(doLoad, delay);\n        } else {\n            doLoad();\n        }\n    };\n    var reinitialize = function() {\n        for(var loader = cache.pop(); loader != null; loader = cache.pop()){\n            loader.deleteScripts();\n        }\n    };\n    return {\n        loadList: loadList,\n        reinitialize: reinitialize\n    };\n};\nvar ScriptLoader = createScriptLoader();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tinymce/tinymce-react/lib/es2015/main/ts/ScriptLoader2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tinymce/tinymce-react/lib/es2015/main/ts/TinyMCE.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tinymce/tinymce-react/lib/es2015/main/ts/TinyMCE.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getTinymce: () => (/* binding */ getTinymce)\n/* harmony export */ });\nvar getTinymce = function(view) {\n    var global = view;\n    return global && global.tinymce ? global.tinymce : null;\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRpbnltY2UvdGlueW1jZS1yZWFjdC9saWIvZXMyMDE1L21haW4vdHMvVGlueU1DRS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsSUFBSUEsYUFBYSxTQUFVQyxJQUFJO0lBQzNCLElBQUlDLFNBQVNEO0lBQ2IsT0FBT0MsVUFBVUEsT0FBT0MsT0FBTyxHQUFHRCxPQUFPQyxPQUFPLEdBQUc7QUFDdkQ7QUFDc0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGFjay1vdmVyZmxvdy8uL25vZGVfbW9kdWxlcy9AdGlueW1jZS90aW55bWNlLXJlYWN0L2xpYi9lczIwMTUvbWFpbi90cy9UaW55TUNFLmpzP2Q2YTgiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGdldFRpbnltY2UgPSBmdW5jdGlvbiAodmlldykge1xuICAgIHZhciBnbG9iYWwgPSB2aWV3O1xuICAgIHJldHVybiBnbG9iYWwgJiYgZ2xvYmFsLnRpbnltY2UgPyBnbG9iYWwudGlueW1jZSA6IG51bGw7XG59O1xuZXhwb3J0IHsgZ2V0VGlueW1jZSB9O1xuIl0sIm5hbWVzIjpbImdldFRpbnltY2UiLCJ2aWV3IiwiZ2xvYmFsIiwidGlueW1jZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tinymce/tinymce-react/lib/es2015/main/ts/TinyMCE.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tinymce/tinymce-react/lib/es2015/main/ts/Utils.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tinymce/tinymce-react/lib/es2015/main/ts/Utils.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   configHandlers: () => (/* binding */ configHandlers),\n/* harmony export */   configHandlers2: () => (/* binding */ configHandlers2),\n/* harmony export */   isBeforeInputEventAvailable: () => (/* binding */ isBeforeInputEventAvailable),\n/* harmony export */   isFunction: () => (/* binding */ isFunction),\n/* harmony export */   isInDoc: () => (/* binding */ isInDoc),\n/* harmony export */   isTextareaOrInput: () => (/* binding */ isTextareaOrInput),\n/* harmony export */   mergePlugins: () => (/* binding */ mergePlugins),\n/* harmony export */   setMode: () => (/* binding */ setMode),\n/* harmony export */   uuid: () => (/* binding */ uuid)\n/* harmony export */ });\n/* harmony import */ var _components_EditorPropTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/EditorPropTypes */ \"(ssr)/./node_modules/@tinymce/tinymce-react/lib/es2015/main/ts/components/EditorPropTypes.js\");\n\nvar isFunction = function(x) {\n    return typeof x === \"function\";\n};\nvar isEventProp = function(name) {\n    return name in _components_EditorPropTypes__WEBPACK_IMPORTED_MODULE_0__.eventPropTypes;\n};\nvar eventAttrToEventName = function(attrName) {\n    return attrName.substr(2);\n};\nvar configHandlers2 = function(handlerLookup, on, off, adapter, prevProps, props, boundHandlers) {\n    var prevEventKeys = Object.keys(prevProps).filter(isEventProp);\n    var currEventKeys = Object.keys(props).filter(isEventProp);\n    var removedKeys = prevEventKeys.filter(function(key) {\n        return props[key] === undefined;\n    });\n    var addedKeys = currEventKeys.filter(function(key) {\n        return prevProps[key] === undefined;\n    });\n    removedKeys.forEach(function(key) {\n        // remove event handler\n        var eventName = eventAttrToEventName(key);\n        var wrappedHandler = boundHandlers[eventName];\n        off(eventName, wrappedHandler);\n        delete boundHandlers[eventName];\n    });\n    addedKeys.forEach(function(key) {\n        var wrappedHandler = adapter(handlerLookup, key);\n        var eventName = eventAttrToEventName(key);\n        boundHandlers[eventName] = wrappedHandler;\n        on(eventName, wrappedHandler);\n    });\n};\nvar configHandlers = function(editor, prevProps, props, boundHandlers, lookup) {\n    return configHandlers2(lookup, editor.on.bind(editor), editor.off.bind(editor), // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    function(handlerLookup, key) {\n        return function(e) {\n            var _a;\n            return (_a = handlerLookup(key)) === null || _a === void 0 ? void 0 : _a(e, editor);\n        };\n    }, prevProps, props, boundHandlers);\n};\nvar unique = 0;\nvar uuid = function(prefix) {\n    var time = Date.now();\n    var random = Math.floor(Math.random() * 1000000000);\n    unique++;\n    return prefix + \"_\" + random + unique + String(time);\n};\nvar isTextareaOrInput = function(element) {\n    return element !== null && (element.tagName.toLowerCase() === \"textarea\" || element.tagName.toLowerCase() === \"input\");\n};\nvar normalizePluginArray = function(plugins) {\n    if (typeof plugins === \"undefined\" || plugins === \"\") {\n        return [];\n    }\n    return Array.isArray(plugins) ? plugins : plugins.split(\" \");\n};\n// eslint-disable-next-line max-len\nvar mergePlugins = function(initPlugins, inputPlugins) {\n    return normalizePluginArray(initPlugins).concat(normalizePluginArray(inputPlugins));\n};\nvar isBeforeInputEventAvailable = function() {\n    return window.InputEvent && typeof InputEvent.prototype.getTargetRanges === \"function\";\n};\nvar isInDoc = function(elem) {\n    if (!(\"isConnected\" in Node.prototype)) {\n        // Fallback for IE and old Edge\n        var current = elem;\n        var parent_1 = elem.parentNode;\n        while(parent_1 != null){\n            current = parent_1;\n            parent_1 = current.parentNode;\n        }\n        return current === elem.ownerDocument;\n    }\n    return elem.isConnected;\n};\nvar setMode = function(editor, mode) {\n    if (editor !== undefined) {\n        if (editor.mode != null && typeof editor.mode === \"object\" && typeof editor.mode.set === \"function\") {\n            editor.mode.set(mode);\n        } else {\n            editor.setMode(mode);\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tinymce/tinymce-react/lib/es2015/main/ts/Utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tinymce/tinymce-react/lib/es2015/main/ts/components/Editor.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@tinymce/tinymce-react/lib/es2015/main/ts/components/Editor.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Editor: () => (/* binding */ Editor)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ScriptLoader2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ScriptLoader2 */ \"(ssr)/./node_modules/@tinymce/tinymce-react/lib/es2015/main/ts/ScriptLoader2.js\");\n/* harmony import */ var _TinyMCE__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../TinyMCE */ \"(ssr)/./node_modules/@tinymce/tinymce-react/lib/es2015/main/ts/TinyMCE.js\");\n/* harmony import */ var _Utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Utils */ \"(ssr)/./node_modules/@tinymce/tinymce-react/lib/es2015/main/ts/Utils.js\");\n/* harmony import */ var _EditorPropTypes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./EditorPropTypes */ \"(ssr)/./node_modules/@tinymce/tinymce-react/lib/es2015/main/ts/components/EditorPropTypes.js\");\nvar __extends = undefined && undefined.__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __assign = undefined && undefined.__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n\n\n\n\n\nvar Editor = /** @class */ function(_super) {\n    __extends(Editor, _super);\n    function Editor(props) {\n        var _a, _b, _c;\n        var _this = _super.call(this, props) || this;\n        _this.rollbackTimer = undefined;\n        _this.valueCursor = undefined;\n        _this.rollbackChange = function() {\n            var editor = _this.editor;\n            var value = _this.props.value;\n            if (editor && value && value !== _this.currentContent) {\n                editor.undoManager.ignore(function() {\n                    editor.setContent(value);\n                    // only restore cursor on inline editors when they are focused\n                    // as otherwise it will cause a focus grab\n                    if (_this.valueCursor && (!_this.inline || editor.hasFocus())) {\n                        try {\n                            editor.selection.moveToBookmark(_this.valueCursor);\n                        } catch (e) {}\n                    }\n                });\n            }\n            _this.rollbackTimer = undefined;\n        };\n        _this.handleBeforeInput = function(_evt) {\n            if (_this.props.value !== undefined && _this.props.value === _this.currentContent && _this.editor) {\n                if (!_this.inline || _this.editor.hasFocus()) {\n                    try {\n                        // getBookmark throws exceptions when the editor has not been focused\n                        // possibly only in inline mode but I'm not taking chances\n                        _this.valueCursor = _this.editor.selection.getBookmark(3);\n                    } catch (e) {}\n                }\n            }\n        };\n        _this.handleBeforeInputSpecial = function(evt) {\n            if (evt.key === \"Enter\" || evt.key === \"Backspace\" || evt.key === \"Delete\") {\n                _this.handleBeforeInput(evt);\n            }\n        };\n        _this.handleEditorChange = function(_evt) {\n            var editor = _this.editor;\n            if (editor && editor.initialized) {\n                var newContent = editor.getContent();\n                if (_this.props.value !== undefined && _this.props.value !== newContent && _this.props.rollback !== false) {\n                    // start a timer and revert to the value if not applied in time\n                    if (!_this.rollbackTimer) {\n                        _this.rollbackTimer = window.setTimeout(_this.rollbackChange, typeof _this.props.rollback === \"number\" ? _this.props.rollback : 200);\n                    }\n                }\n                if (newContent !== _this.currentContent) {\n                    _this.currentContent = newContent;\n                    if ((0,_Utils__WEBPACK_IMPORTED_MODULE_3__.isFunction)(_this.props.onEditorChange)) {\n                        _this.props.onEditorChange(newContent, editor);\n                    }\n                }\n            }\n        };\n        _this.handleEditorChangeSpecial = function(evt) {\n            if (evt.key === \"Backspace\" || evt.key === \"Delete\") {\n                _this.handleEditorChange(evt);\n            }\n        };\n        _this.initialise = function(attempts) {\n            var _a, _b, _c;\n            if (attempts === void 0) {\n                attempts = 0;\n            }\n            var target = _this.elementRef.current;\n            if (!target) {\n                return; // Editor has been unmounted\n            }\n            if (!(0,_Utils__WEBPACK_IMPORTED_MODULE_3__.isInDoc)(target)) {\n                // this is probably someone trying to help by rendering us offscreen\n                // but we can't do that because the editor iframe must be in the document\n                // in order to have state\n                if (attempts === 0) {\n                    // we probably just need to wait for the current events to be processed\n                    setTimeout(function() {\n                        return _this.initialise(1);\n                    }, 1);\n                } else if (attempts < 100) {\n                    // wait for ten seconds, polling every tenth of a second\n                    setTimeout(function() {\n                        return _this.initialise(attempts + 1);\n                    }, 100);\n                } else {\n                    // give up, at this point it seems that more polling is unlikely to help\n                    throw new Error(\"tinymce can only be initialised when in a document\");\n                }\n                return;\n            }\n            var tinymce = (0,_TinyMCE__WEBPACK_IMPORTED_MODULE_2__.getTinymce)(_this.view);\n            if (!tinymce) {\n                throw new Error(\"tinymce should have been loaded into global scope\");\n            }\n            var finalInit = __assign(__assign({}, _this.props.init), {\n                selector: undefined,\n                target: target,\n                readonly: _this.props.disabled,\n                inline: _this.inline,\n                plugins: (0,_Utils__WEBPACK_IMPORTED_MODULE_3__.mergePlugins)((_a = _this.props.init) === null || _a === void 0 ? void 0 : _a.plugins, _this.props.plugins),\n                toolbar: (_b = _this.props.toolbar) !== null && _b !== void 0 ? _b : (_c = _this.props.init) === null || _c === void 0 ? void 0 : _c.toolbar,\n                setup: function(editor) {\n                    _this.editor = editor;\n                    _this.bindHandlers({});\n                    // When running in inline mode the editor gets the initial value\n                    // from the innerHTML of the element it is initialized on.\n                    // However we don't want to take on the responsibility of sanitizing\n                    // to remove XSS in the react integration so we have a chicken and egg\n                    // problem... We avoid it by sneaking in a set content before the first\n                    // \"official\" setContent and using TinyMCE to do the sanitization.\n                    if (_this.inline && !(0,_Utils__WEBPACK_IMPORTED_MODULE_3__.isTextareaOrInput)(target)) {\n                        editor.once(\"PostRender\", function(_evt) {\n                            editor.setContent(_this.getInitialValue(), {\n                                no_events: true\n                            });\n                        });\n                    }\n                    if (_this.props.init && (0,_Utils__WEBPACK_IMPORTED_MODULE_3__.isFunction)(_this.props.init.setup)) {\n                        _this.props.init.setup(editor);\n                    }\n                },\n                init_instance_callback: function(editor) {\n                    var _a, _b;\n                    // check for changes that happened since tinymce.init() was called\n                    var initialValue = _this.getInitialValue();\n                    _this.currentContent = (_a = _this.currentContent) !== null && _a !== void 0 ? _a : editor.getContent();\n                    if (_this.currentContent !== initialValue) {\n                        _this.currentContent = initialValue;\n                        // same as resetContent in TinyMCE 5\n                        editor.setContent(initialValue);\n                        editor.undoManager.clear();\n                        editor.undoManager.add();\n                        editor.setDirty(false);\n                    }\n                    var disabled = (_b = _this.props.disabled) !== null && _b !== void 0 ? _b : false;\n                    (0,_Utils__WEBPACK_IMPORTED_MODULE_3__.setMode)(_this.editor, disabled ? \"readonly\" : \"design\");\n                    // ensure existing init_instance_callback is called\n                    if (_this.props.init && (0,_Utils__WEBPACK_IMPORTED_MODULE_3__.isFunction)(_this.props.init.init_instance_callback)) {\n                        _this.props.init.init_instance_callback(editor);\n                    }\n                }\n            });\n            if (!_this.inline) {\n                target.style.visibility = \"\";\n            }\n            if ((0,_Utils__WEBPACK_IMPORTED_MODULE_3__.isTextareaOrInput)(target)) {\n                target.value = _this.getInitialValue();\n            }\n            tinymce.init(finalInit);\n        };\n        _this.id = _this.props.id || (0,_Utils__WEBPACK_IMPORTED_MODULE_3__.uuid)(\"tiny-react\");\n        _this.elementRef = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createRef();\n        _this.inline = (_c = (_a = _this.props.inline) !== null && _a !== void 0 ? _a : (_b = _this.props.init) === null || _b === void 0 ? void 0 : _b.inline) !== null && _c !== void 0 ? _c : false;\n        _this.boundHandlers = {};\n        return _this;\n    }\n    Object.defineProperty(Editor.prototype, \"view\", {\n        get: function() {\n            var _a, _b;\n            return (_b = (_a = this.elementRef.current) === null || _a === void 0 ? void 0 : _a.ownerDocument.defaultView) !== null && _b !== void 0 ? _b : window;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Editor.prototype.componentDidUpdate = function(prevProps) {\n        var _this = this;\n        var _a, _b;\n        if (this.rollbackTimer) {\n            clearTimeout(this.rollbackTimer);\n            this.rollbackTimer = undefined;\n        }\n        if (this.editor) {\n            this.bindHandlers(prevProps);\n            if (this.editor.initialized) {\n                this.currentContent = (_a = this.currentContent) !== null && _a !== void 0 ? _a : this.editor.getContent();\n                if (typeof this.props.initialValue === \"string\" && this.props.initialValue !== prevProps.initialValue) {\n                    // same as resetContent in TinyMCE 5\n                    this.editor.setContent(this.props.initialValue);\n                    this.editor.undoManager.clear();\n                    this.editor.undoManager.add();\n                    this.editor.setDirty(false);\n                } else if (typeof this.props.value === \"string\" && this.props.value !== this.currentContent) {\n                    var localEditor_1 = this.editor;\n                    localEditor_1.undoManager.transact(function() {\n                        // inline editors grab focus when restoring selection\n                        // so we don't try to keep their selection unless they are currently focused\n                        var cursor;\n                        if (!_this.inline || localEditor_1.hasFocus()) {\n                            try {\n                                // getBookmark throws exceptions when the editor has not been focused\n                                // possibly only in inline mode but I'm not taking chances\n                                cursor = localEditor_1.selection.getBookmark(3);\n                            } catch (e) {}\n                        }\n                        var valueCursor = _this.valueCursor;\n                        localEditor_1.setContent(_this.props.value);\n                        if (!_this.inline || localEditor_1.hasFocus()) {\n                            for(var _i = 0, _a = [\n                                cursor,\n                                valueCursor\n                            ]; _i < _a.length; _i++){\n                                var bookmark = _a[_i];\n                                if (bookmark) {\n                                    try {\n                                        localEditor_1.selection.moveToBookmark(bookmark);\n                                        _this.valueCursor = bookmark;\n                                        break;\n                                    } catch (e) {}\n                                }\n                            }\n                        }\n                    });\n                }\n                if (this.props.disabled !== prevProps.disabled) {\n                    var disabled = (_b = this.props.disabled) !== null && _b !== void 0 ? _b : false;\n                    (0,_Utils__WEBPACK_IMPORTED_MODULE_3__.setMode)(this.editor, disabled ? \"readonly\" : \"design\");\n                }\n            }\n        }\n    };\n    Editor.prototype.componentDidMount = function() {\n        var _this = this;\n        var _a, _b, _c, _d, _e;\n        if ((0,_TinyMCE__WEBPACK_IMPORTED_MODULE_2__.getTinymce)(this.view) !== null) {\n            this.initialise();\n        } else if (Array.isArray(this.props.tinymceScriptSrc) && this.props.tinymceScriptSrc.length === 0) {\n            (_b = (_a = this.props).onScriptsLoadError) === null || _b === void 0 ? void 0 : _b.call(_a, new Error(\"No `tinymce` global is present but the `tinymceScriptSrc` prop was an empty array.\"));\n        } else if ((_c = this.elementRef.current) === null || _c === void 0 ? void 0 : _c.ownerDocument) {\n            var successHandler = function() {\n                var _a, _b;\n                (_b = (_a = _this.props).onScriptsLoad) === null || _b === void 0 ? void 0 : _b.call(_a);\n                _this.initialise();\n            };\n            var errorHandler = function(err) {\n                var _a, _b;\n                (_b = (_a = _this.props).onScriptsLoadError) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n            };\n            _ScriptLoader2__WEBPACK_IMPORTED_MODULE_1__.ScriptLoader.loadList(this.elementRef.current.ownerDocument, this.getScriptSources(), (_e = (_d = this.props.scriptLoading) === null || _d === void 0 ? void 0 : _d.delay) !== null && _e !== void 0 ? _e : 0, successHandler, errorHandler);\n        }\n    };\n    Editor.prototype.componentWillUnmount = function() {\n        var _this = this;\n        var editor = this.editor;\n        if (editor) {\n            editor.off(this.changeEvents(), this.handleEditorChange);\n            editor.off(this.beforeInputEvent(), this.handleBeforeInput);\n            editor.off(\"keypress\", this.handleEditorChangeSpecial);\n            editor.off(\"keydown\", this.handleBeforeInputSpecial);\n            editor.off(\"NewBlock\", this.handleEditorChange);\n            Object.keys(this.boundHandlers).forEach(function(eventName) {\n                editor.off(eventName, _this.boundHandlers[eventName]);\n            });\n            this.boundHandlers = {};\n            editor.remove();\n            this.editor = undefined;\n        }\n    };\n    Editor.prototype.render = function() {\n        return this.inline ? this.renderInline() : this.renderIframe();\n    };\n    Editor.prototype.changeEvents = function() {\n        var _a, _b, _c;\n        var isIE = (_c = (_b = (_a = (0,_TinyMCE__WEBPACK_IMPORTED_MODULE_2__.getTinymce)(this.view)) === null || _a === void 0 ? void 0 : _a.Env) === null || _b === void 0 ? void 0 : _b.browser) === null || _c === void 0 ? void 0 : _c.isIE();\n        return isIE ? \"change keyup compositionend setcontent CommentChange\" : \"change input compositionend setcontent CommentChange\";\n    };\n    Editor.prototype.beforeInputEvent = function() {\n        return (0,_Utils__WEBPACK_IMPORTED_MODULE_3__.isBeforeInputEventAvailable)() ? \"beforeinput SelectionChange\" : \"SelectionChange\";\n    };\n    Editor.prototype.renderInline = function() {\n        var _a = this.props.tagName, tagName = _a === void 0 ? \"div\" : _a;\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(tagName, {\n            ref: this.elementRef,\n            id: this.id\n        });\n    };\n    Editor.prototype.renderIframe = function() {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"textarea\", {\n            ref: this.elementRef,\n            style: {\n                visibility: \"hidden\"\n            },\n            name: this.props.textareaName,\n            id: this.id\n        });\n    };\n    Editor.prototype.getScriptSources = function() {\n        var _a, _b;\n        var async = (_a = this.props.scriptLoading) === null || _a === void 0 ? void 0 : _a.async;\n        var defer = (_b = this.props.scriptLoading) === null || _b === void 0 ? void 0 : _b.defer;\n        if (this.props.tinymceScriptSrc !== undefined) {\n            if (typeof this.props.tinymceScriptSrc === \"string\") {\n                return [\n                    {\n                        src: this.props.tinymceScriptSrc,\n                        async: async,\n                        defer: defer\n                    }\n                ];\n            }\n            // multiple scripts can be specified which allows for hybrid mode\n            return this.props.tinymceScriptSrc.map(function(item) {\n                if (typeof item === \"string\") {\n                    // async does not make sense for multiple items unless\n                    // they are not dependent (which will be unlikely)\n                    return {\n                        src: item,\n                        async: async,\n                        defer: defer\n                    };\n                } else {\n                    return item;\n                }\n            });\n        }\n        // fallback to the cloud when the tinymceScriptSrc is not specified\n        var channel = this.props.cloudChannel;\n        var apiKey = this.props.apiKey ? this.props.apiKey : \"no-api-key\";\n        var cloudTinyJs = \"https://cdn.tiny.cloud/1/\".concat(apiKey, \"/tinymce/\").concat(channel, \"/tinymce.min.js\");\n        return [\n            {\n                src: cloudTinyJs,\n                async: async,\n                defer: defer\n            }\n        ];\n    };\n    Editor.prototype.getInitialValue = function() {\n        if (typeof this.props.initialValue === \"string\") {\n            return this.props.initialValue;\n        } else if (typeof this.props.value === \"string\") {\n            return this.props.value;\n        } else {\n            return \"\";\n        }\n    };\n    Editor.prototype.bindHandlers = function(prevProps) {\n        var _this = this;\n        if (this.editor !== undefined) {\n            // typescript chokes trying to understand the type of the lookup function\n            (0,_Utils__WEBPACK_IMPORTED_MODULE_3__.configHandlers)(this.editor, prevProps, this.props, this.boundHandlers, function(key) {\n                return _this.props[key];\n            });\n            // check if we should monitor editor changes\n            var isValueControlled = function(p) {\n                return p.onEditorChange !== undefined || p.value !== undefined;\n            };\n            var wasControlled = isValueControlled(prevProps);\n            var nowControlled = isValueControlled(this.props);\n            if (!wasControlled && nowControlled) {\n                this.editor.on(this.changeEvents(), this.handleEditorChange);\n                this.editor.on(this.beforeInputEvent(), this.handleBeforeInput);\n                this.editor.on(\"keydown\", this.handleBeforeInputSpecial);\n                this.editor.on(\"keyup\", this.handleEditorChangeSpecial);\n                this.editor.on(\"NewBlock\", this.handleEditorChange);\n            } else if (wasControlled && !nowControlled) {\n                this.editor.off(this.changeEvents(), this.handleEditorChange);\n                this.editor.off(this.beforeInputEvent(), this.handleBeforeInput);\n                this.editor.off(\"keydown\", this.handleBeforeInputSpecial);\n                this.editor.off(\"keyup\", this.handleEditorChangeSpecial);\n                this.editor.off(\"NewBlock\", this.handleEditorChange);\n            }\n        }\n    };\n    Editor.propTypes = _EditorPropTypes__WEBPACK_IMPORTED_MODULE_4__.EditorPropTypes;\n    Editor.defaultProps = {\n        cloudChannel: \"6\"\n    };\n    return Editor;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tinymce/tinymce-react/lib/es2015/main/ts/components/Editor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tinymce/tinymce-react/lib/es2015/main/ts/components/EditorPropTypes.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@tinymce/tinymce-react/lib/es2015/main/ts/components/EditorPropTypes.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EditorPropTypes: () => (/* binding */ EditorPropTypes),\n/* harmony export */   eventPropTypes: () => (/* binding */ eventPropTypes)\n/* harmony export */ });\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! prop-types */ \"(ssr)/./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_0__);\nvar __assign = undefined && undefined.__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n\nvar eventPropTypes = {\n    onActivate: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onAddUndo: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onBeforeAddUndo: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onBeforeExecCommand: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onBeforeGetContent: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onBeforeRenderUI: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onBeforeSetContent: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onBeforePaste: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onBlur: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onChange: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onClearUndos: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onClick: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onContextMenu: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onCommentChange: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onCopy: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onCut: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onDblclick: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onDeactivate: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onDirty: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onDrag: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onDragDrop: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onDragEnd: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onDragGesture: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onDragOver: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onDrop: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onExecCommand: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onFocus: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onFocusIn: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onFocusOut: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onGetContent: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onHide: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onInit: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onKeyDown: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onKeyPress: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onKeyUp: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onLoadContent: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onMouseDown: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onMouseEnter: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onMouseLeave: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onMouseMove: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onMouseOut: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onMouseOver: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onMouseUp: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onNodeChange: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onObjectResizeStart: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onObjectResized: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onObjectSelected: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onPaste: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onPostProcess: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onPostRender: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onPreProcess: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onProgressState: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onRedo: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onRemove: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onReset: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onSaveContent: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onSelectionChange: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onSetAttrib: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onSetContent: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onShow: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onSubmit: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onUndo: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onVisualAid: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onSkinLoadError: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onThemeLoadError: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onModelLoadError: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onPluginLoadError: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onIconsLoadError: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onLanguageLoadError: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onScriptsLoad: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    onScriptsLoadError: prop_types__WEBPACK_IMPORTED_MODULE_0__.func\n};\nvar EditorPropTypes = __assign({\n    apiKey: prop_types__WEBPACK_IMPORTED_MODULE_0__.string,\n    id: prop_types__WEBPACK_IMPORTED_MODULE_0__.string,\n    inline: prop_types__WEBPACK_IMPORTED_MODULE_0__.bool,\n    init: prop_types__WEBPACK_IMPORTED_MODULE_0__.object,\n    initialValue: prop_types__WEBPACK_IMPORTED_MODULE_0__.string,\n    onEditorChange: prop_types__WEBPACK_IMPORTED_MODULE_0__.func,\n    value: prop_types__WEBPACK_IMPORTED_MODULE_0__.string,\n    tagName: prop_types__WEBPACK_IMPORTED_MODULE_0__.string,\n    cloudChannel: prop_types__WEBPACK_IMPORTED_MODULE_0__.string,\n    plugins: prop_types__WEBPACK_IMPORTED_MODULE_0__.oneOfType([\n        prop_types__WEBPACK_IMPORTED_MODULE_0__.string,\n        prop_types__WEBPACK_IMPORTED_MODULE_0__.array\n    ]),\n    toolbar: prop_types__WEBPACK_IMPORTED_MODULE_0__.oneOfType([\n        prop_types__WEBPACK_IMPORTED_MODULE_0__.string,\n        prop_types__WEBPACK_IMPORTED_MODULE_0__.array\n    ]),\n    disabled: prop_types__WEBPACK_IMPORTED_MODULE_0__.bool,\n    textareaName: prop_types__WEBPACK_IMPORTED_MODULE_0__.string,\n    tinymceScriptSrc: prop_types__WEBPACK_IMPORTED_MODULE_0__.oneOfType([\n        prop_types__WEBPACK_IMPORTED_MODULE_0__.string,\n        prop_types__WEBPACK_IMPORTED_MODULE_0__.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_0__.string),\n        prop_types__WEBPACK_IMPORTED_MODULE_0__.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_0__.shape({\n            src: prop_types__WEBPACK_IMPORTED_MODULE_0__.string,\n            async: prop_types__WEBPACK_IMPORTED_MODULE_0__.bool,\n            defer: prop_types__WEBPACK_IMPORTED_MODULE_0__.bool\n        }))\n    ]),\n    rollback: prop_types__WEBPACK_IMPORTED_MODULE_0__.oneOfType([\n        prop_types__WEBPACK_IMPORTED_MODULE_0__.number,\n        prop_types__WEBPACK_IMPORTED_MODULE_0__.oneOf([\n            false\n        ])\n    ]),\n    scriptLoading: prop_types__WEBPACK_IMPORTED_MODULE_0__.shape({\n        async: prop_types__WEBPACK_IMPORTED_MODULE_0__.bool,\n        defer: prop_types__WEBPACK_IMPORTED_MODULE_0__.bool,\n        delay: prop_types__WEBPACK_IMPORTED_MODULE_0__.number\n    })\n}, eventPropTypes);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tinymce/tinymce-react/lib/es2015/main/ts/components/EditorPropTypes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tinymce/tinymce-react/lib/es2015/main/ts/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tinymce/tinymce-react/lib/es2015/main/ts/index.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Editor: () => (/* reexport safe */ _components_Editor__WEBPACK_IMPORTED_MODULE_0__.Editor)\n/* harmony export */ });\n/* harmony import */ var _components_Editor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/Editor */ \"(ssr)/./node_modules/@tinymce/tinymce-react/lib/es2015/main/ts/components/Editor.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRpbnltY2UvdGlueW1jZS1yZWFjdC9saWIvZXMyMDE1L21haW4vdHMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNkM7QUFDM0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGFjay1vdmVyZmxvdy8uL25vZGVfbW9kdWxlcy9AdGlueW1jZS90aW55bWNlLXJlYWN0L2xpYi9lczIwMTUvbWFpbi90cy9pbmRleC5qcz80ODlkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVkaXRvciB9IGZyb20gJy4vY29tcG9uZW50cy9FZGl0b3InO1xuZXhwb3J0IHsgRWRpdG9yIH07XG4iXSwibmFtZXMiOlsiRWRpdG9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tinymce/tinymce-react/lib/es2015/main/ts/index.js\n");

/***/ })

};
;